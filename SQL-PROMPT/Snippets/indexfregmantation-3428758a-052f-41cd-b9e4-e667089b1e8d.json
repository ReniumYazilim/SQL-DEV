{
  "id": "3428758a-052f-41cd-b9e4-e667089b1e8d",
  "prefix": "indexfregmantation",
  "description": "create job",
  "body": "USE msdb;\r\nGO\r\n\r\nBEGIN TRANSACTION\r\nDECLARE @ReturnCode INT\r\nSELECT @ReturnCode = 0\r\n\r\n-- Job kategorisi kontrolü\r\nIF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Maintenance' AND category_class=1)\r\nBEGIN\r\n    EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Maintenance'\r\nEND\r\n\r\n-- Job oluştur\r\nDECLARE @jobId BINARY(16)\r\nEXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'TEKAYDINLAR Index Maintenance - Daily 12:15', \r\n        @enabled=1, \r\n        @notify_level_eventlog=0, \r\n        @notify_level_email=2, \r\n        @notify_level_page=2, \r\n        @delete_level=0, \r\n        @category_name=N'Database Maintenance', \r\n        @owner_login_name=N'sa', \r\n        @job_id = @jobId OUTPUT\r\n\r\n-- Job adımı ekleme\r\nEXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Index Maintenance', \r\n        @step_id=1, \r\n        @cmdexec_success_code=0, \r\n        @on_success_action=1, \r\n        @on_fail_action=2, \r\n        @retry_attempts=0, \r\n        @retry_interval=0, \r\n        @os_run_priority=0, @subsystem=N'TSQL', \r\n        @command=N'SET NOCOUNT ON;\r\n\r\n-- Log tablosu kontrolü\r\nIF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N''dbo.IndexMaintenanceLog'') AND type in (N''U''))\r\nBEGIN\r\n    CREATE TABLE dbo.IndexMaintenanceLog\r\n    (\r\n        ID INT IDENTITY(1,1) PRIMARY KEY,\r\n        SchemaName NVARCHAR(255),\r\n        TableName NVARCHAR(255),\r\n        IndexName NVARCHAR(255),\r\n        FragmentationLevel FLOAT,\r\n        Action VARCHAR(50),\r\n        ExecutionDate DATETIME,\r\n        Duration INT\r\n    )\r\nEND\r\n\r\nDECLARE @StartTime DATETIME = GETDATE()\r\nDECLARE @TableName NVARCHAR(255)\r\nDECLARE @IndexName NVARCHAR(255)\r\nDECLARE @SchemaName NVARCHAR(255)\r\nDECLARE @Fragmentation FLOAT\r\nDECLARE @SQL NVARCHAR(MAX)\r\nDECLARE @StepStartTime DATETIME\r\n\r\n-- Index bilgilerini geçici tabloya al\r\nSELECT \r\n    OBJECT_SCHEMA_NAME(ips.object_id) AS SchemaName,\r\n    OBJECT_NAME(ips.object_id) AS TableName,\r\n    i.name AS IndexName,\r\n    ips.avg_fragmentation_in_percent AS Fragmentation,\r\n    ips.page_count\r\nINTO #TempIndexStats\r\nFROM sys.dm_db_index_physical_stats(DB_ID(), NULL, NULL, NULL, ''LIMITED'') ips\r\nJOIN sys.indexes i ON ips.object_id = i.object_id AND ips.index_id = i.index_id\r\nWHERE ips.avg_fragmentation_in_percent > 5  -- 5% üzeri fragmentasyonu olanları al\r\n    AND i.name IS NOT NULL  -- Heapleri alma\r\n    AND OBJECT_NAME(ips.object_id) NOT LIKE ''sys%''  -- Sistem tablolarını alma\r\n    AND ips.page_count > 1000  -- Küçük indexleri atla\r\n\r\n-- İşlem yapılacak indexleri kur\r\nDECLARE IndexCursor CURSOR FOR \r\nSELECT SchemaName, TableName, IndexName, Fragmentation \r\nFROM #TempIndexStats\r\nORDER BY Fragmentation DESC  -- En fazla fragmentasyonu olandan başla\r\n\r\nOPEN IndexCursor\r\nFETCH NEXT FROM IndexCursor INTO @SchemaName, @TableName, @IndexName, @Fragmentation\r\n\r\nWHILE @@FETCH_STATUS = 0\r\nBEGIN\r\n    SET @StepStartTime = GETDATE()\r\n\r\n    IF @Fragmentation >= 30  -- Yüksek fragmentasyon - REBUILD\r\n    BEGIN\r\n        SET @SQL = ''ALTER INDEX '' + QUOTENAME(@IndexName) + \r\n                  '' ON '' + QUOTENAME(@SchemaName) + ''.'' + QUOTENAME(@TableName) + \r\n                  '' REBUILD WITH (ONLINE = ON)''\r\n        \r\n        BEGIN TRY\r\n            EXEC sp_executesql @SQL\r\n            \r\n            INSERT INTO dbo.IndexMaintenanceLog \r\n                (SchemaName, TableName, IndexName, FragmentationLevel, Action, ExecutionDate, Duration)\r\n            VALUES \r\n                (@SchemaName, @TableName, @IndexName, @Fragmentation, ''REBUILD'', @StepStartTime, \r\n                 DATEDIFF(SECOND, @StepStartTime, GETDATE()))\r\n        END TRY\r\n        BEGIN CATCH\r\n            -- Online rebuild başarısız olursa offline dene\r\n            SET @SQL = ''ALTER INDEX '' + QUOTENAME(@IndexName) + \r\n                      '' ON '' + QUOTENAME(@SchemaName) + ''.'' + QUOTENAME(@TableName) + \r\n                      '' REBUILD''\r\n            EXEC sp_executesql @SQL\r\n            \r\n            INSERT INTO dbo.IndexMaintenanceLog \r\n                (SchemaName, TableName, IndexName, FragmentationLevel, Action, ExecutionDate, Duration)\r\n            VALUES \r\n                (@SchemaName, @TableName, @IndexName, @Fragmentation, ''REBUILD-OFFLINE'', @StepStartTime,\r\n                 DATEDIFF(SECOND, @StepStartTime, GETDATE()))\r\n        END CATCH\r\n    END\r\n    ELSE IF @Fragmentation >= 5  -- Orta fragmentasyon - REORGANIZE\r\n    BEGIN\r\n        SET @SQL = ''ALTER INDEX '' + QUOTENAME(@IndexName) + \r\n                  '' ON '' + QUOTENAME(@SchemaName) + ''.'' + QUOTENAME(@TableName) + \r\n                  '' REORGANIZE''\r\n        \r\n        EXEC sp_executesql @SQL\r\n        \r\n        INSERT INTO dbo.IndexMaintenanceLog \r\n            (SchemaName, TableName, IndexName, FragmentationLevel, Action, ExecutionDate, Duration)\r\n        VALUES \r\n            (@SchemaName, @TableName, @IndexName, @Fragmentation, ''REORGANIZE'', @StepStartTime,\r\n             DATEDIFF(SECOND, @StepStartTime, GETDATE()))\r\n    END\r\n\r\n    FETCH NEXT FROM IndexCursor INTO @SchemaName, @TableName, @IndexName, @Fragmentation\r\nEND\r\n\r\nCLOSE IndexCursor\r\nDEALLOCATE IndexCursor\r\nDROP TABLE #TempIndexStats\r\n\r\n-- İstatistikleri güncelle\r\nEXEC sp_updatestats', \r\n        @database_name=N'TEKAYDINLAR'\r\n\r\n-- Her gün 12:15'te çalışacak schedule\r\nEXEC @ReturnCode = msdb.dbo.sp_add_jobschedule \r\n    @job_id=@jobId, \r\n    @name=N'Daily at 12:15', \r\n    @enabled=1, \r\n    @freq_type=4,  -- Günlük\r\n    @freq_interval=1,  -- Her gün\r\n    @freq_subday_type=1,  -- Belirli zamanda\r\n    @freq_subday_interval=0, \r\n    @freq_relative_interval=0, \r\n    @freq_recurrence_factor=0, \r\n    @active_start_date=20240101, \r\n    @active_end_date=99991231, \r\n    @active_start_time=121500,  -- 12:15\r\n    @active_end_time=235959\r\n\r\n-- Job'ı local sunucuya ata\r\nEXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'\r\nCOMMIT TRANSACTION\r\nGO"
}